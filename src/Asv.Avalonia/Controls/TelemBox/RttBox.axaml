<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="using:Asv.Avalonia"
        xmlns:avalonia="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia">
    <Design.PreviewWith>
        <Grid ColumnDefinitions="*,*" RowDefinitions="*,*" MaxWidth="900" Height="600">
            <ThemeVariantScope Grid.Column="0" Grid.Row="0" RequestedThemeVariant="Dark">
                <Border Background="{DynamicResource SystemRegionBrush}">
                    <WrapPanel ItemWidth="200">
                        <controls:RttBox HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Header="Freq TX" Icon="Temperature" Margin="2" >
                            <TextBlock Text="115.">
                                <Run FontSize="15" Foreground="{DynamicResource AsvForegroundUnknownBrush}" Text="456 654"/>
                            </TextBlock>
                        </controls:RttBox>
                        <controls:RttBox Classes="info1" IsUpdated="True" Header="Freq TX" Icon="Temperature" Margin="2" >
                            <DockPanel>
                                <ProgressBar 
                                    IsIndeterminate="True"
                                    MinWidth="10" 
                                    Height="5" 
                                    Foreground="{ReflectionBinding Foreground, RelativeSource={RelativeSource AncestorType=controls:RttBox}}"
                                    CornerRadius="0" 
                                    DockPanel.Dock="Bottom" 
                                    Margin="2,0,0,2" 
                                    HorizontalAlignment="Stretch">
                                </ProgressBar>
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                    <Grid ColumnDefinitions="*,4,Auto" RowDefinitions="*,0,*" >
                                        <TextBlock Grid.RowSpan="3" FontWeight="Light" FontSize="30" Text="123.123" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        <TextBlock Grid.Row="0" Grid.Column="2"  FontSize="13"  Text="123.123" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
                                        <TextBlock Grid.Row="2" Grid.Column="2"   FontSize="13"  Text="123.123" VerticalAlignment="Top" HorizontalAlignment="Center"/>
                                    </Grid>
                                </StackPanel>
                                
                            </DockPanel>
                            
                        </controls:RttBox>
                        <controls:RttBox Classes="info2" IsUpdated="True" Header="Frequency Rx" Margin="2" Content="RTK Fixed"/>
                        <controls:RttBox Classes="info3" IsUpdated="True" Header="DDM" Icon="Frequency" Margin="2" Content="15%"/>
                        <controls:RttBox Classes="info4" IsUpdated="True" Header="Power" Content="15 dBm" Margin="2"/>
                        <controls:RttBox IsUpdated="True" Classes="error" Header="Frequency TX" Icon="Temperature" Margin="2" Content="RTK Fixed" />    
                        <controls:RttBox IsUpdated="True" Classes="warning" Header="Frequency Rx" Content="115.152331" FontSize="25" Margin="2"/>
                        <controls:RttBox IsExpanded="False" Icon="Frequency" IsUpdated="True" SmallHeader="DDM" SmallContent="15%" Classes="unknown" Header="DDM" Content="15%" Margin="2"/>
                    </WrapPanel>
                        
                </Border>
            </ThemeVariantScope>
            <ThemeVariantScope Grid.Column="1" Grid.Row="0" RequestedThemeVariant="Light">
                <Border Background="{DynamicResource SystemRegionBrush}">
                    <WrapPanel ItemWidth="150">
                        <controls:RttBox Header="Freq TX" Icon="Temperature" Margin="2" >
                            <TextBlock Text="115.">
                                <Run FontSize="15" Foreground="{DynamicResource AsvForegroundUnknownBrush}" Text="456 654"/>
                            </TextBlock>
                        </controls:RttBox>
                        <controls:RttBox Classes="info" IsUpdated="True" Header="Freq TX" Icon="Temperature" Margin="2" >
                            <DockPanel>
                                <ProgressBar 
                                    IsIndeterminate="True"
                                    MinWidth="10" 
                                    Height="5" 
                                    Foreground="{ReflectionBinding Foreground, RelativeSource={RelativeSource AncestorType=controls:RttBox}}"
                                    CornerRadius="0" 
                                    DockPanel.Dock="Bottom" 
                                    Margin="2,0,0,2" 
                                    HorizontalAlignment="Stretch">
                                </ProgressBar>
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                    <Grid ColumnDefinitions="*,4,Auto" RowDefinitions="*,0,*" >
                                        <TextBlock Grid.RowSpan="3" FontWeight="Light" FontSize="30" Text="123.123" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        <TextBlock Grid.Row="0" Grid.Column="2"  FontSize="13"  Text="123.123" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
                                        <TextBlock Grid.Row="2" Grid.Column="2"   FontSize="13"  Text="123.123" VerticalAlignment="Top" HorizontalAlignment="Center"/>
                                    </Grid>
                                </StackPanel>
                                
                            </DockPanel>
                            
                        </controls:RttBox>
                        <controls:RttBox Classes="info2" IsUpdated="True" Header="Frequency Rx" Margin="2" Content="RTK Fixed"/>
                        <controls:RttBox Classes="info3" IsUpdated="True" Header="DDM" Icon="Frequency" Margin="2" Content="15%"/>
                        <controls:RttBox Classes="info4" IsUpdated="True" Header="Power" Content="15 dBm" Margin="2"/>
                        <controls:RttBox IsUpdated="True" Classes="error" Header="Frequency TX" Icon="Temperature" Margin="2" Content="RTK Fixed" />    
                        <controls:RttBox IsUpdated="True" Classes="warning" Header="Frequency Rx" Content="115.152331" FontSize="25" Margin="2"/>
                        <controls:RttBox IsExpanded="False" Icon="Frequency" IsUpdated="True" SmallHeader="DDM" SmallContent="15%" Classes="unknown" Header="DDM" Content="15%" Margin="2"/>
                    </WrapPanel>
                </Border>
            </ThemeVariantScope>
            <ThemeVariantScope Grid.Column="0" Grid.Row="1" RequestedThemeVariant="Dark">
                <Border Background="{DynamicResource SystemRegionBrush}">
                    
                </Border>
            </ThemeVariantScope>
            <ThemeVariantScope Grid.Column="1" Grid.Row="1" RequestedThemeVariant="Light">
                <Border Background="{DynamicResource SystemRegionBrush}">
                   
                </Border>
            </ThemeVariantScope>
        </Grid>
    
    </Design.PreviewWith>
    
    <Style Selector="controls|RttBox">
        <!-- Set Defaults -->
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SystemControlForegroundBaseHighBrush}"/>
        <Setter Property="IconBrush" Value="{DynamicResource SystemControlForegroundBaseLowBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="150"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="HeaderFontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Light"/>
        
        <Setter Property="Template">
            <ControlTemplate>
                <Border
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    CornerRadius="{TemplateBinding CornerRadius}">
                    <StackPanel>
                            <DockPanel DockPanel.Dock="Top">
                                <Border Name="HeaderBorder" DockPanel.Dock="Left" 
                                        IsVisible="{TemplateBinding Icon, Converter={x:Static ObjectConverters.IsNotNull}}" 
                                        Margin="-2,-2,0,0" VerticalAlignment="Top" 
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding BorderBrush}" 
                                        CornerRadius="5,0,5,0" >
                                    <ToggleButton Width="{TemplateBinding HeaderFontSize, Converter={x:Static controls:AddDoubleConverter.Instance}, ConverterParameter=2}" Height="{TemplateBinding HeaderFontSize, Converter={x:Static controls:AddDoubleConverter.Instance}, ConverterParameter=2}" MinWidth="0" MinHeight="0" BorderThickness="0" IsEnabled="{TemplateBinding SupportSmallSize}" Margin="0" VerticalContentAlignment="Center" Padding="0" IsChecked="{TemplateBinding IsExpanded, Mode=TwoWay}" HorizontalAlignment="Stretch" Theme="{DynamicResource TransparentButton}">
                                        <avalonia:MaterialIcon Foreground="{TemplateBinding IconBrush}"  Margin="4" Kind="{TemplateBinding Icon}" Width="{TemplateBinding HeaderFontSize, Converter={x:Static controls:AddDoubleConverter.Instance}, ConverterParameter=-2}" Height="{TemplateBinding HeaderFontSize, Converter={x:Static controls:AddDoubleConverter.Instance}, ConverterParameter=-2}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>                                        
                                    </ToggleButton>
                                </Border>
                                <TextBlock Margin="4,0,0,0" IsVisible="{TemplateBinding IsExpanded, Converter={x:Static BoolConverters.Not}}" FontSize="{TemplateBinding HeaderFontSize}" DockPanel.Dock="Left" Text="{TemplateBinding SmallHeader}"/>
                                 
                                <Ellipse IsVisible="{TemplateBinding IsUpdated, Converter={x:Static ObjectConverters.IsNotNull}}" Name="Indicator" Opacity="0" Classes.fadeout="{TemplateBinding IsUpdated}" DockPanel.Dock="Right" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="4,3,3,0" />
                                <ContentPresenter Name="PART_SmallContentPresenter"
                                                  DockPanel.Dock="Right"
                                                  IsVisible="{TemplateBinding IsExpanded, Converter={x:Static BoolConverters.Not}}"
                                                  Background="{TemplateBinding Background}"
                                                  HorizontalAlignment="Right"
                                                  HorizontalContentAlignment="Right"
                                                  FontSize="{TemplateBinding HeaderFontSize}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                  ContentTemplate="{TemplateBinding SmallContentTemplate}"
                                                  Content="{TemplateBinding SmallContent}"/>
                                <TextBlock IsVisible="{TemplateBinding IsExpanded}" FontSize="{TemplateBinding HeaderFontSize}" VerticalAlignment="Center" Foreground="{TemplateBinding BorderBrush}" HorizontalAlignment="Center" Text="{TemplateBinding Header}"/>
                            </DockPanel>
                        <ContentPresenter Name="PART_ContentPresenter"
                                          IsVisible="{TemplateBinding IsExpanded}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Background="{TemplateBinding Background}"
                                          FontSize="{TemplateBinding FontSize}"
                                          Foreground="{TemplateBinding Foreground}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Padding="{TemplateBinding Padding}"
                                          Content="{TemplateBinding Content}">
                        </ContentPresenter>
                    </StackPanel>
                </Border>
            </ControlTemplate>
        </Setter>
        <Style Selector="^[IsExpanded=False] /template/ Border#HeaderBorder">
            <Setter Property="CornerRadius" Value="0"/>
            <Setter Property="Margin" Value="-1"/>
            <Setter Property="Padding" Value="1"/>
        </Style>
        
        <Style Selector="^.error">
                <Setter Property="Background" Value="{DynamicResource AsvBackgroundErrorBrush}"/>
                <Setter Property="IconBrush" Value="{DynamicResource SystemControlForegroundBaseHighBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AsvForegroundErrorBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource AsvForegroundErrorBrush}"/>
            </Style>
            <Style Selector="^.warning">
                <Setter Property="Background" Value="{DynamicResource AsvBackgroundWarningBrush}"/>
                <Setter Property="IconBrush" Value="{DynamicResource SystemControlForegroundBaseHighBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AsvForegroundWarningBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource AsvForegroundWarningBrush}"/>
            </Style>
        
            <Style Selector="^.unknown">
                <Setter Property="Background" Value="{DynamicResource AsvBackgroundUnknownBrush}"/>
                <Setter Property="IconBrush" Value="{DynamicResource SystemControlForegroundBaseHighBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AsvForegroundUnknownBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource AsvForegroundUnknownBrush}"/>
            </Style>
            
            <Style Selector="^.success">
                <Setter Property="Background" Value="{DynamicResource AsvBackgroundSuccessBrush}"/>
                <Setter Property="IconBrush" Value="{DynamicResource SystemControlForegroundBaseHighBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AsvForegroundSuccessBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource AsvForegroundSuccessBrush}"/>
            </Style>
            
            <Style Selector="^.info1">
                <Setter Property="Background" Value="{DynamicResource AsvBackgroundInfoBrush}"/>
                <Setter Property="IconBrush" Value="{DynamicResource SystemControlForegroundBaseHighBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AsvForegroundInfoBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource AsvForegroundInfoBrush}"/>
            </Style>
            
            <Style Selector="^.info2">
                <Setter Property="Background" Value="{DynamicResource AsvBackgroundInfo2Brush}"/>
                <Setter Property="IconBrush" Value="{DynamicResource SystemControlForegroundBaseHighBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AsvForegroundInfo2Brush}"/>
                <Setter Property="Foreground" Value="{DynamicResource AsvForegroundInfo2Brush}"/>
            </Style>
            
            <Style Selector="^.info3">
                <Setter Property="Background" Value="{DynamicResource AsvBackgroundInfo3Brush}"/>
                <Setter Property="IconBrush" Value="{DynamicResource SystemControlForegroundBaseHighBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AsvForegroundInfo3Brush}"/>
                <Setter Property="Foreground" Value="{DynamicResource AsvForegroundInfo3Brush}"/>
            </Style>
            
            <Style Selector="^.info4">
                <Setter Property="Background" Value="{DynamicResource AsvBackgroundInfo4Brush}"/>
                <Setter Property="IconBrush" Value="{DynamicResource SystemControlForegroundBaseHighBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AsvForegroundInfo4Brush}"/>
                <Setter Property="Foreground" Value="{DynamicResource AsvForegroundInfo4Brush}"/>
            </Style>
    </Style>
</Styles>
