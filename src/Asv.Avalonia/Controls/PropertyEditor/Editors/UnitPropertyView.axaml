<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:avalonia="clr-namespace:Asv.Avalonia"
             xmlns:avalonia1="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             mc:Ignorable="d" d:DesignWidth="250" d:DesignHeight="200"
             x:Class="Asv.Avalonia.UnitPropertyView"
             VerticalContentAlignment="Top"
             x:DataType="avalonia:UnitPropertyViewModel">
    <Design.DataContext>
        <avalonia:UnitPropertyViewModel/>
    </Design.DataContext>
    <UserControl.Styles>
        <Style Selector="TextBox">
            <Style Selector="^:error /template/ Border#PART_BorderElement">
                <Setter Property="BorderBrush" Value="{DynamicResource AsvForegroundErrorColor}"/>
            </Style>
        </Style>
        
        <Style Selector="DataValidationErrors">
            <Setter Property="Template">
                <ControlTemplate>
                    <Panel>
                        <ContentPresenter Name="PART_ContentPresenter"
                                          Background="{TemplateBinding Background}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          CornerRadius="{TemplateBinding CornerRadius}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          Padding="{TemplateBinding Padding}"/>
                        <ContentControl HorizontalAlignment="Right"
                                        Margin="0,0,4,0"
                                        ContentTemplate="{TemplateBinding ErrorTemplate}"
                                        DataContext="{TemplateBinding Owner}"
                                        Content="{Binding (DataValidationErrors.Errors)}"
                                        IsVisible="{Binding (DataValidationErrors.HasErrors)}"/>
                        
                    </Panel>
                </ControlTemplate>
            </Setter>
            <Setter Property="ErrorTemplate">
                <DataTemplate x:DataType="{x:Type x:Object}">
                    <Canvas Width="14" Height="14" Margin="4 0 1 0" 
                            Background="Transparent">
                        <Canvas.Styles>
                            <Style Selector="ToolTip">
                                <Setter Property="Background" Value="{DynamicResource AsvForegroundErrorBrush}"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource AsvForegroundErrorBrush}"/>
                            </Style>
                        </Canvas.Styles>
                        <ToolTip.Tip>
                            <ItemsControl ItemsSource="{Binding}"/>
                        </ToolTip.Tip>
                        <Path Data="M14,7 A7,7 0 0,0 0,7 M0,7 A7,7 0 1,0 14,7 M7,3l0,5 M7,9l0,2" 
                              Stroke="{DynamicResource AsvForegroundErrorBrush}" 
                              StrokeThickness="2"/>
                    </Canvas>
                </DataTemplate>
            </Setter>
        </Style>
    </UserControl.Styles>
    <TextBox
        x:Name="PART_ValueTextBox"
        VerticalContentAlignment="Center"
        avalonia:NavigationHelper.IsFocused ="{Binding IsFocused, Mode=OneWay}"
        Text="{Binding ViewValue.Value}"
        GotFocus="PART_ValueTextBox_OnGotFocus"
        LostFocus="PART_ValueTextBox_OnLostFocus"
        AcceptsReturn="False" AcceptsTab="False" >
        <ToolTip.Tip>
            <StackPanel Spacing="8" IsVisible="{Binding Description, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                <TextBlock Classes="h1" Text="{Binding Header}"/>
                <TextBlock Classes="description" Text="{Binding Description}"/>
            </StackPanel>
        </ToolTip.Tip>
        <TextBox.KeyBindings>
            <KeyBinding Gesture="Enter" Command="{Binding CommitValue}" />
        </TextBox.KeyBindings>
        <TextBox.InnerLeftContent>
            <StackPanel Orientation="Horizontal">
                <avalonia1:MaterialIcon
                    Margin="4,0,0,0"
                    IsVisible="{Binding !!Icon}"
                    Width="16" Height="16" 
                    Foreground="{DynamicResource TextControlForegroundDisabled}"
                    Kind="{Binding Icon}" 
                />
                <TextBlock MinWidth="20" 
                           IsVisible="{Binding !!ShortName}"
                           VerticalAlignment="Center" 
                           Margin="4,0" 
                           Classes="description" 
                           Text="{Binding ShortName}"/>
            </StackPanel>
        </TextBox.InnerLeftContent>
        <TextBox.InnerRightContent>
            <StackPanel Orientation="Horizontal" Spacing="4" Margin="0,0,25,0">
                <Button Padding="0"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Right"
                        IsVisible="{Binding IsInEditMode}"
                        Theme="{DynamicResource TransparentButton}"
                        Command="{Binding CommitValue}">
                    
                    <avalonia1:MaterialIcon
                        Width="20" Height="20" 
                        Kind="Pencil" 
                        Foreground="{DynamicResource AsvForegroundSuccessBrush}"
                    />
                </Button>
                <Button Theme="{DynamicResource TransparentButton}">
                    <Button.Flyout>
                        <MenuFlyout ItemsSource="{Binding Unit.AvailableUnits.Values}">
                            <MenuFlyout.ItemContainerTheme>
                                <ControlTheme TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}" 
                                              x:DataType="avalonia:IUnitItem">
                                    <Setter Property="Header" Value="{Binding Name}"/>
                                    <Setter Property="Command" Value="{ReflectionBinding DataContext.ChangeUnitCommand, ElementName=PART_ValueTextBox}"/>
                                    <Setter Property="CommandParameter" Value="{Binding }"/>
                                </ControlTheme>
                            </MenuFlyout.ItemContainerTheme>
                        </MenuFlyout>
                    </Button.Flyout>
                    <TextBlock
                        Foreground="{DynamicResource TextFillColorDisabledBrush}"
                        Theme="{DynamicResource BodyTextBlockStyle}"
                        VerticalAlignment="Center" 
                        Text="{Binding CurrentUnit.Value.Symbol}" />    
                </Button>
                
            </StackPanel>
        </TextBox.InnerRightContent>
    </TextBox>
</UserControl>
