<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:avalonia="clr-namespace:Asv.Avalonia"
             xmlns:avalonia1="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="Asv.Avalonia.TreePageView"
             x:DataType="avalonia:IDesignTimeTreePage">
    <Design.DataContext>
        <avalonia:DesignTimeTreePageViewModel />
    </Design.DataContext>
    <Grid RowDefinitions="30, *">
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="150" Width="Auto" />
            <ColumnDefinition Width="20" />
            <ColumnDefinition Width="3*" />
        </Grid.ColumnDefinitions>
        <TextBox VerticalContentAlignment="Center" >
            <TextBox.InnerLeftContent>
                <avalonia1:MaterialIcon Margin="4 , 0" Kind="Search" Width="16" Height="16" />
            </TextBox.InnerLeftContent>
        </TextBox>
        <TreeView Grid.Column="0" Grid.Row="1"
                  AutoScrollToSelectedItem="True"
                  SelectedItem="{Binding SelectedNode.Value, Mode=TwoWay}"
                  SelectionMode="Single"
                  ItemsSource="{Binding TreeView.Items}">
            <TreeView.Styles>
                <Style Selector="TreeViewItem">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                </Style>
            </TreeView.Styles>
            <TreeView.ItemTemplate>
                <TreeDataTemplate ItemsSource="{Binding Items}">
                    <DockPanel HorizontalAlignment="Stretch">
                        <avalonia1:MaterialIcon
                            Margin="0,0,12,0"
                            DockPanel.Dock="Left"
                            Kind="{Binding Base.Icon}"
                            Width="15" Height="15" />

                        <Border IsVisible="{Binding Base.Status, Converter={x:Static ObjectConverters.IsNotNull}}"
                                Margin="0,0,5,0" VerticalAlignment="Center" MinWidth="20" CornerRadius="5"
                                BorderBrush="{DynamicResource ButtonBorderBrush}" BorderThickness="1"
                                DockPanel.Dock="Right">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="2" FontSize="10"
                                       Text="{Binding Base.Status}" />
                        </Border>
                        <TextBlock Text="{Binding Base.Header}" />
                    </DockPanel>
                </TreeDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
        <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
                      Background="Transparent" Width="10" HorizontalAlignment="Stretch" />
        <Rectangle Grid.Column="1" Grid.Row="0" Grid.RowSpan="2"
                   Fill="{StaticResource SystemChromeLowColor}" Width="0.5" VerticalAlignment="Stretch" />
        <avalonia1:MaterialIcon IsVisible="{Binding !IsCompactMode}" Grid.Row="0" Grid.RowSpan="2" Width="15"
                               Height="15" Grid.Column="1" Kind="UnfoldMoreVertical"
                               Foreground="{StaticResource SystemChromeLowColor}" />
        <ContentControl Grid.Column="2" Grid.Row="1" Content="{Binding SelectedPage.Value}" />
        <DockPanel Grid.Column="2" Grid.Row="0">
            <ItemsControl ItemsSource="{Binding SelectedPage.Value.MenuView.Items}" DockPanel.Dock="Right">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button 
                            Command="{Binding Base.Command}"
                            CommandParameter="{Binding Base.CommandParameter}"
                            IsEnabled="{Binding Base.IsEnabled}"
                            IsVisible="{Binding Base.IsVisible}">
                            <StackPanel Orientation="Horizontal" Spacing="4">
                                <avalonia1:MaterialIcon Kind="{Binding Base.Icon}"/>
                                <TextBlock Text="{Binding Base.Header}"/>    
                            </StackPanel>
                            
                            <Button.Flyout>
                                <MenuFlyout ItemsSource="{Binding Items, Mode=TwoWay}">
                                    <MenuFlyout.ItemContainerTheme>
                                        <ControlTheme TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}" 
                                                      x:DataType="avalonia:MenuNode">
                                            <Setter Property="Icon" Value="{Binding Base.Icon, Converter={x:Static avalonia:MaterialIconConverter.Instance}}" />
                                            <Setter Property="Header" Value="{Binding Base.Header}"/>
                                            <Setter Property="ItemsSource" Value="{Binding Items}"/>
                                            <Setter Property="Command" Value="{Binding Base.Command}"/>
                                            <Setter Property="CommandParameter" Value="{Binding Base.CommandParameter}"/>
                                            <Setter Property="IsEnabled" Value="{Binding Base.IsEnabled}" />
                                            <Setter Property="IsVisible" Value="{Binding Base.IsVisible}" />
                                            <Setter Property="StaysOpenOnClick" Value="{Binding Base.StaysOpenOnClick}" />
                                            <Setter Property="HotKey" Value="{Binding Base.HotKey}" />
                                        </ControlTheme>
                                    </MenuFlyout.ItemContainerTheme>
                                </MenuFlyout>
                            </Button.Flyout>
                        </Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            
            <!--<Menu VerticalAlignment="Center" DockPanel.Dock="Right" ItemsSource="{Binding SelectedPage.Value.MenuView.Items}" >
                <Menu.ItemContainerTheme>
                    <ControlTheme TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}" 
                                  x:DataType="avalonia:MenuNode">
                        <Setter Property="Icon" Value="{Binding Base.Icon, Converter={x:Static avalonia:MaterialIconConverter.Instance}}" />
                        <Setter Property="Header" Value="{Binding Base.Header}"/>
                        <Setter Property="ItemsSource" Value="{Binding Items}"/>
                        <Setter Property="Command" Value="{Binding Base.Command}"/>
                        <Setter Property="CommandParameter" Value="{Binding Base.CommandParameter}"/>
                        <Setter Property="IsEnabled" Value="{Binding Base.IsEnabled}" />
                        <Setter Property="IsVisible" Value="{Binding Base.IsVisible}" />
                        <Setter Property="StaysOpenOnClick" Value="{Binding Base.StaysOpenOnClick}" />
                        <Setter Property="HotKey" Value="{Binding Base.HotKey}" />
                    </ControlTheme>
                </Menu.ItemContainerTheme>
            </Menu>-->
            <ItemsControl ItemsSource="{Binding BreadCrumb}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <avalonia1:MaterialIcon IsVisible="{Binding !IsFirst}" VerticalAlignment="Center"
                                                    Width="18" Height="18" Kind="ChevronRight" />
                            <TextBlock FontSize="16" VerticalAlignment="Center"
                                       Text="{Binding Item.Header}" />
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </DockPanel>
        
    </Grid>
    
    <!--<Grid ColumnDefinitions="Auto, 5, 3*" RowDefinitions="42, 5, *, Auto">
        <DockPanel IsVisible="{Binding !IsCompactMode.Value}" Grid.Column="0" Grid.Row="0" VerticalAlignment="Center">
            <Button Margin="4,4,0,4" DockPanel.Dock="Right" Command="{Binding History.Redo}" Height="35"
                    Theme="{DynamicResource TransparentButton}">
                <avalonia1:MaterialIcon VerticalAlignment="Center" Width="16" Height="16" Kind="Redo" />
            </Button>
            <Button Margin="0,4,4,4" DockPanel.Dock="Right" Command="{Binding History.Undo}" Height="35"
                    VerticalAlignment="Stretch" Theme="{DynamicResource TransparentButton}">
                <avalonia1:MaterialIcon VerticalAlignment="Center" Width="16" Height="16" Kind="Undo" />
            </Button>
           
            <ToggleButton Margin="4" Theme="{DynamicResource TransparentButton}" IsChecked="{Binding IsCompactMode}">
                <StackPanel Orientation="Horizontal">
                    <avalonia1:MaterialIcon Margin="0,0,8,0" DockPanel.Dock="Left"
                                           IsVisible="{Binding Icon, Converter={x:Static ObjectConverters.IsNotNull}}"
                                           VerticalAlignment="Center" Width="22" Height="22" Kind="{Binding Icon.Value}" />
                    <TextBlock VerticalAlignment="Center" FontSize="18" Text="{Binding Title}" />
                </StackPanel>
            </ToggleButton>
        </DockPanel>
        <TreeView Grid.Column="0" Grid.Row="2" Grid.IsSharedSizeScope="True" 
                  IsVisible="{Binding !IsCompactMode.Value}"
                  AutoScrollToSelectedItem="True"
                  SelectedItem="{Binding SelectedMenu.Value, Mode=TwoWay}"
                  SelectionMode="Single" ItemsSource="{Binding Items}">
            <TreeView.Styles>
                <Style Selector="TreeViewItem" x:DataType="avalonia:TreeMenuItem">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected" Value="{Binding IsFocused.Value, Mode=TwoWay}" />
                </Style>
            </TreeView.Styles>
            <TreeView.ItemTemplate>
                <TreeDataTemplate ItemsSource="{Binding Items}">
                    <DockPanel HorizontalAlignment="Stretch">
                        <avalonia1:MaterialIcon
                            Margin="0,0,12,0"
                            DockPanel.Dock="Left"
                            Kind="{Binding Base.Icon.Value}"
                            Classes.expanded="{Binding IsExpanded}"
                            Classes.selected="{Binding IsFocused}"
                            Width="15" Height="15" />

                        <Border IsVisible="{Binding Base.Status.Value, Converter={x:Static ObjectConverters.IsNotNull}}"
                                Margin="0,0,5,0" VerticalAlignment="Center" MinWidth="20" CornerRadius="5"
                                BorderBrush="{DynamicResource ButtonBorderBrush}" BorderThickness="1"
                                DockPanel.Dock="Right">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="2" FontSize="10"
                                       Text="{Binding Base.Status}" />
                        </Border>
                        <TextBlock Text="{Binding Base.Name}" />
                    </DockPanel>
                </TreeDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
        
        <Grid x:Name="PART_TitleGrid" ColumnDefinitions="Auto,Auto,*,Auto" Grid.Column="2" Grid.Row="0"
              Margin="0,0,8,0" >
            <Grid.Styles>
                <Style Selector="MenuItem" x:DataType="avalonia:IMenuItem">
                    <Setter Property="Header" Value="{Binding Header}" />
                    <Setter Property="Icon"
                            Value="{Binding Icon, Converter={x:Static avalonia:MaterialIconConverter.Instance}}" />
                    <Setter Property="Command" Value="{Binding Command}" />
                    <Setter Property="CommandParameter" Value="{Binding CommandParameter}" />
                    <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
                    <Setter Property="IsVisible" Value="{Binding IsVisible}" />
                    <Setter Property="StaysOpenOnClick" Value="{Binding StaysOpenOnClick}" />
                    <Setter Property="ItemsSource" Value="{Binding Items}" />
                    <Setter Property="HotKey" Value="{Binding HotKey}" />
                    <Setter Property="InputGesture" Value="{Binding HotKey}" />
                </Style>
            </Grid.Styles>
            <ToggleButton IsChecked="{Binding !IsCompactMode}" IsVisible="{Binding IsCompactMode}">
                <StackPanel Orientation="Horizontal">
                    <avalonia1:MaterialIcon DockPanel.Dock="Left" Width="22" Height="22" VerticalAlignment="Center"
                                           Kind="Menu" />
                </StackPanel>
            </ToggleButton>
            <StackPanel Grid.Column="1" DockPanel.Dock="Left" Margin="8,0,0,0" Spacing="8"
                        
                        Orientation="Horizontal">
                <avalonia1:MaterialIcon
                    Width="22" Height="22" Kind="{Binding SelectedMenu.Value.Base.Icon}" />
                <ItemsControl ItemsSource="{Binding BreadCrumb}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <avalonia1:MaterialIcon IsVisible="{Binding !IsFirst}" VerticalAlignment="Center"
                                                       Width="18" Height="18" Kind="ChevronRight" />
                                <TextBlock FontSize="16" FontStretch="ExtraCondensed" VerticalAlignment="Center"
                                           Text="{Binding Item.Base.Name}" />
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </StackPanel>
            ~1~<DropDownButton HorizontalAlignment="Right" IsVisible="{Binding IsTitleCompactMode}"
                            Theme="{DynamicResource TransparentButton}" Grid.Column="3">
                <DropDownButton.Flyout>
                    <MenuFlyout ItemsSource="{Binding SelectedPage.Value.Actions}" />
                </DropDownButton.Flyout>
                <avalonia1:MaterialIcon Width="18" Height="18" Kind="DotsVertical" />
            </DropDownButton>
            <ItemsControl Grid.Column="3" HorizontalAlignment="Right" VerticalAlignment="Center"
                          ItemsSource="{Binding SelectedPage.Value.Actions}" DockPanel.Dock="Right">
                <ItemsControl.IsVisible>
                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                        <Binding Path="SelectedPage" Converter="{x:Static ObjectConverters.IsNotNull}" />
                        <Binding Path="!IsTitleCompactMode" />
                    </MultiBinding>
                </ItemsControl.IsVisible>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" Spacing="8" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Panel MinWidth="80" IsVisible="{Binding IsVisible}">
                            <Button x:Name="Button" IsVisible="{Binding !Items.Count}" Command="{Binding Command}"
                                    CommandParameter="{Binding CommandParameter}">
                                <StackPanel Orientation="Horizontal" Spacing="4">
                                    <avalonia1:MaterialIcon VerticalAlignment="Center" Width="18" Height="18"
                                                           Kind="{Binding Icon}" />
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Header}" />
                                </StackPanel>
                            </Button>
                            <DropDownButton
                                IsVisible="{Binding Items, Converter={x:Static ObjectConverters.IsNotNull}}">
                                <DropDownButton.Flyout>
                                    <MenuFlyout ItemsSource="{Binding Items}" />
                                </DropDownButton.Flyout>
                                <StackPanel Orientation="Horizontal" Spacing="4">
                                    <avalonia1:MaterialIcon VerticalAlignment="Center" Width="18" Height="18"
                                                           Kind="{Binding Icon}" />
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Header}" />
                                </StackPanel>
                            </DropDownButton>
                        </Panel>

                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>@1@

        </Grid>
        <GridSplitter IsVisible="{Binding !IsCompactMode}" Grid.Column="1" Grid.Row="0" Grid.RowSpan="3"
                      Background="Transparent" Width="5" HorizontalAlignment="Stretch" />
        <Rectangle IsVisible="{Binding !IsCompactMode}" Grid.Column="1" Grid.Row="0" Grid.RowSpan="3"
                   Fill="{DynamicResource ButtonBorderBrush}" Width="1" VerticalAlignment="Stretch" />
        <avalonia1:MaterialIcon IsVisible="{Binding !IsCompactMode}" Grid.Row="0" Grid.RowSpan="3" Width="15"
                               Height="15" Grid.Column="1" Kind="UnfoldMoreVertical"
                               Foreground="{DynamicResource ButtonBorderBrush}" />
        <Rectangle Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" Fill="{DynamicResource ButtonBorderBrush}"
                   Height="1" HorizontalAlignment="Stretch" />
        <ContentControl Grid.Row="2" Grid.Column="2" Content="{Binding SelectedPage.Value}" />
        <ToggleButton Height="100" Theme="{DynamicResource TransparentButton}" Padding="0" Margin="-4,0,0,0"
                      Grid.Row="2" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center"
                      IsChecked="{Binding !IsCompactMode}" IsVisible="{Binding IsCompactMode}">
            <StackPanel Orientation="Horizontal">
                <avalonia1:MaterialIcon DockPanel.Dock="Left" Kind="ChevronRight"
                                       IsVisible="{Binding Icon, Converter={x:Static ObjectConverters.IsNotNull}}"
                                       VerticalAlignment="Center" Width="22" Height="22"
                                       Foreground="{DynamicResource ButtonBorderBrush}" />
            </StackPanel>
        </ToggleButton>
        
    </Grid>-->
</UserControl>
