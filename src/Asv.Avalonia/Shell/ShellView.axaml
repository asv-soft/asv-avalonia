<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:avalonia="clr-namespace:Asv.Avalonia;assembly=Asv.Avalonia"
             xmlns:avalonia1="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="Asv.Avalonia.ShellView"
             x:DataType="avalonia:ShellViewModel">
    <Design.DataContext>
        <avalonia:DesignTimeShellViewModel />
    </Design.DataContext>
    <UserControl.Styles>
        <Style Selector="Border.status">
            <Style Selector="^.normal">
                <Setter Property="Background" Value="{DynamicResource SystemControlPageBackgroundChromeLowBrush}"/>
            </Style>
        </Style>
        <Style Selector="Border.frame">
            <Style Selector="^.normal">
                <Setter Property="BorderBrush" Value="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}" />
                <Setter Property="Background" Value="{DynamicResource SystemControlPageBackgroundChromeLowBrush}"/>
            </Style>
            <Style Selector="^.error">
                <Setter Property="BorderBrush" Value="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}" />
                <Setter Property="Background" Value="{DynamicResource SystemControlPageBackgroundChromeLowBrush}"/>
            </Style>
            <Style Selector="^.warning">
                <Setter Property="BorderBrush" Value="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}" />
                <Setter Property="Background" Value="{DynamicResource SystemControlPageBackgroundChromeLowBrush}"/>
            </Style>
        </Style>
        
        
        <Style Selector="DockPanel#Header avalonia1|MaterialIcon">
            <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseMediumBrush}" />
        </Style>
        <Style Selector="DockPanel#Status avalonia1|MaterialIcon">
            <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseMediumBrush}" />
        </Style>
        <Style Selector="DockPanel#Status TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseMediumBrush}" />
        </Style>
        <Style Selector="DropDownButton#WindowControlButton /template/ PathIcon">
            <Setter Property="IsVisible" Value="False" />
        </Style>
    </UserControl.Styles>
    <Border Classes="frame" BorderThickness="1"
            Classes.normal="{Binding ErrorState, 
              Converter={x:Static avalonia:EnumToBooleanConverter.Instance}, 
              ConverterParameter={x:Static avalonia:ShellErrorState.Normal} }"
            Classes.error="{Binding ErrorState, 
              Converter={x:Static avalonia:EnumToBooleanConverter.Instance}, 
              ConverterParameter={x:Static avalonia:ShellErrorState.Error} }"
          Classes.warning="{Binding ErrorState, 
              Converter={x:Static avalonia:EnumToBooleanConverter.Instance}, 
              ConverterParameter={x:Static avalonia:ShellErrorState.Warning} }">
    <DockPanel Focusable="True">
        <DockPanel x:Name="Header" Background="{DynamicResource SystemControlBackgroundChromeMediumBrush}" Dock="Top"
                   avalonia:WindowHelper.EnableDrag="True"
                   avalonia:WindowHelper.DoubleTappedWindowState="True">
            <DropDownButton Background="Transparent"  Foreground="{DynamicResource SystemControlForegroundAccentBrush}">
                <avalonia1:MaterialIcon Kind="Menu" Foreground="{DynamicResource SystemControlForegroundAccentBrush}" />
                <DropDownButton.Flyout>
                    <MenuFlyout ItemsSource="{Binding MainMenuView.Items}">
                        <MenuFlyout.ItemContainerTheme>
                            <ControlTheme TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}" 
                                          x:DataType="avalonia:MenuNode">
                                <Setter Property="Icon" Value="{Binding Base.Icon, Converter={x:Static avalonia:MaterialIconConverter.Instance}}" />
                                <Setter Property="Header" Value="{Binding Base.Header}"/>
                                <Setter Property="ItemsSource" Value="{Binding Items}"/>
                                <Setter Property="Command" Value="{Binding Base.Command}"/>
                                <Setter Property="CommandParameter" Value="{Binding Base.CommandParameter}"/>
                                <Setter Property="IsEnabled" Value="{Binding Base.IsEnabled}" />
                                <Setter Property="IsVisible" Value="{Binding Base.IsVisible}" />
                                <Setter Property="StaysOpenOnClick" Value="{Binding Base.StaysOpenOnClick}" />
                                <Setter Property="HotKey" Value="{Binding Base.HotKey}" />
                            </ControlTheme>
                        </MenuFlyout.ItemContainerTheme>
                    </MenuFlyout>
                </DropDownButton.Flyout>
            </DropDownButton>
            
            <Button Theme="{DynamicResource TransparentButton}" DockPanel.Dock="Right" Command="{Binding Close}">
                <avalonia1:MaterialIcon Kind="Close" />
                <ToolTip.Tip>
                    <TextBlock Text="{x:Static avalonia:RS.ShellView_WindowControlButton_Close}"/>
                </ToolTip.Tip>
            </Button>
            <Button Theme="{DynamicResource TransparentButton}" DockPanel.Dock="Right" Command="{Binding ChangeWindowState}">
                <avalonia1:MaterialIcon Kind="{Binding WindowSateIconKind.Value}" />
                <ToolTip.Tip>
                    <TextBlock Text="{Binding WindowStateHeader.Value}"/>
                </ToolTip.Tip>
            </Button>
            <Button Theme="{DynamicResource TransparentButton}" DockPanel.Dock="Right" Command="{Binding Collapse}">
                <avalonia1:MaterialIcon Kind="Minimize" />
                <ToolTip.Tip>
                    <TextBlock Text="{x:Static avalonia:RS.ShellView_WindowControlButton_Collapse}"/>
                </ToolTip.Tip>
            </Button>

            <Button Theme="{DynamicResource TransparentButton}" DockPanel.Dock="Right" Command="{Binding OpenSettings}">
                <avalonia1:MaterialIcon Kind="Cog" />
            </Button>
            <Button Theme="{DynamicResource TransparentButton}" DockPanel.Dock="Right" Command="{Binding ChangeTheme}">
                <avalonia1:MaterialIcon Kind="ThemeLightDark" />
            </Button>
            
            <StackPanel Spacing="4" HorizontalAlignment="Center" Orientation="Horizontal">
                <Button Theme="{DynamicResource TransparentButton}" Command="{Binding Navigation.Backward}">
                    <avalonia1:MaterialIcon Kind="ArrowLeft" />
                </Button>
                <Button Theme="{DynamicResource TransparentButton}" Command="{Binding Navigation.Forward}">
                    <avalonia1:MaterialIcon Kind="ArrowRight" />
                </Button>
                <Viewbox Height="25" >
                    <AutoCompleteBox Watermark="Search" Width="300" VerticalAlignment="Center" BorderBrush="{DynamicResource SystemControlBackgroundBaseLowBrush}" >
                        <AutoCompleteBox.InnerRightContent>
                            <avalonia1:MaterialIcon Margin="4,0,4,0" Kind="Search"/>
                        </AutoCompleteBox.InnerRightContent>
                    </AutoCompleteBox>
                </Viewbox>
            </StackPanel>
        </DockPanel>
        <Border 
            Classes="status" 
            DockPanel.Dock="Bottom"
            Background="{DynamicResource SystemControlBackgroundChromeMediumBrush}"
            Classes.normal="{Binding ErrorState, 
            Converter={x:Static avalonia:EnumToBooleanConverter.Instance}, 
            ConverterParameter={x:Static avalonia:ShellErrorState.Normal} }"
            Classes.error="{Binding ErrorState, 
            Converter={x:Static avalonia:EnumToBooleanConverter.Instance}, 
            ConverterParameter={x:Static avalonia:ShellErrorState.Error} }"
            Classes.warning="{Binding ErrorState, 
            Converter={x:Static avalonia:EnumToBooleanConverter.Instance}, 
            ConverterParameter={x:Static avalonia:ShellErrorState.Warning} }"
        >
            <ItemsControl x:Name="Status" ItemsSource="{Binding StatusItemsView}" Height="25" DockPanel.Dock="Bottom"
                          Background="{DynamicResource InfoBarErrorSeverityBackgroundBrush}">
                <ItemsControl.ItemContainerTheme>
                    <ControlTheme TargetType="ContentPresenter">
                        <ControlTheme.Setters>
                            <Setter Property="DockPanel.Dock" Value="Right" />
                        </ControlTheme.Setters>
                    </ControlTheme>
                </ItemsControl.ItemContainerTheme>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <DockPanel LastChildFill="True" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ContentPresenter Content="{Binding}" Margin="8,0,8,0" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Border>
        
        <Border BorderThickness="0, 1, 0, 1" BorderBrush="{DynamicResource SystemControlBackgroundBaseLowBrush}" >
            <avalonia:DockControl 
                x:Name="DockControl"
                ItemsSource="{CompiledBinding PagesView}" 
                SelectedItem="{Binding SelectedPage.Value, Mode=TwoWay}">
            </avalonia:DockControl>
        </Border>
    </DockPanel>
    </Border>
</UserControl>
